// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bL97kH9Dzecu8g2MxMGBSt
// Component: dQk1N0a__grK
import * as React from "react"
import * as p from "@plasmicapp/react-web"
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web"
import Button from "../../Button" // plasmic-import: EDRR_UWJpEhW/component
import CopyrightSocialLanguage from "../../CopyrightSocialLanguage" // plasmic-import: cWU3XAieFy1I/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen" // plasmic-import: wjkIUuh2R8iq/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css"
import * as defaultcss from "../plasmic__default_style.module.css" // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_ecommerce_starter.module.css" // plasmic-import: bL97kH9Dzecu8g2MxMGBSt/projectcss
import * as sty from "./PlasmicFooter.module.css" // plasmic-import: dQk1N0a__grK/css
import Icon22Icon from "./icons/PlasmicIcon__Icon22" // plasmic-import: 7JOyoRQGqGVQ/icon
import Icon21Icon from "./icons/PlasmicIcon__Icon21" // plasmic-import: GIhjieRuC-DB/icon
import Icon20Icon from "./icons/PlasmicIcon__Icon20" // plasmic-import: eMZOJ7TiEN_c/icon

export const PlasmicFooter__VariantProps = new Array()

export const PlasmicFooter__ArgProps = new Array("container432")

function PlasmicFooter__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants(),
  })

  return (
    <section
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <p.Stack
        as={"div"}
        data-plasmic-name={"container432"}
        data-plasmic-override={overrides.container432}
        hasGap={true}
        className={classNames(defaultcss.all, sty.container432)}
      >
        {p.renderPlasmicSlot({
          defaultContents: (
            <React.Fragment>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__stnc)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.text__fYoto
                  )}
                >
                  {"Subscribe"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.text___8Z3Mr
                  )}
                >
                  {
                    "Sign up for exclusive offers, original stories, activism, events and more."
                  }
                </div>

                <input
                  className={classNames(defaultcss.input, sty.textbox__gyos)}
                  placeholder={"Email addressâ€¦"}
                  size={1}
                  type={"text"}
                  value={""}
                />

                <Button
                  className={classNames("__wab_instance", sty.button__edHzu)}
                  colors={"black"}
                  icons={"none"}
                  slot={"Sign me up"}
                />
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__fo3Xx)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.text__skyYb
                  )}
                >
                  {"Help"}
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__beBu0)}
                >
                  <Button slot={"Order status"}>
                    <Icon22Icon
                      className={classNames(defaultcss.all, sty.svg__ksCw2)}
                      role={"img"}
                    />
                  </Button>

                  <Button
                    className={classNames("__wab_instance", sty.button__oaRmW)}
                    slot={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__jjhqg
                        )}
                      >
                        {"Returns and exchanges"}
                      </div>
                    }
                  >
                    <Icon21Icon
                      className={classNames(defaultcss.all, sty.svg__pbt1)}
                      role={"img"}
                    />
                  </Button>

                  <Button
                    className={classNames("__wab_instance", sty.button__ddY7C)}
                    slot={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text__wfKot
                        )}
                      >
                        {"Help center"}
                      </div>
                    }
                  >
                    <Icon20Icon
                      className={classNames(defaultcss.all, sty.svg__xNbUl)}
                      role={"img"}
                    />
                  </Button>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__vubSf)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.text__z1Wwb
                  )}
                >
                  {"More info"}
                </div>

                <div className={classNames(defaultcss.all, sty.freeBox__ovuIo)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox___4X1O1)}
                  >
                    <Button icons={"none"} slot={"Gift cards"} />

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__j13Ys
                      )}
                      icons={"none"}
                      slot={"Find a store"}
                    />

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__b2Av9
                      )}
                      icons={"none"}
                      slot={"Careers"}
                    />

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__ca2In
                      )}
                      icons={"none"}
                      slot={"Sitemap"}
                    />
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox___22Tq)}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__iEbIz
                      )}
                      icons={"none"}
                      slot={"Group sales"}
                    />

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__ggXhd
                      )}
                      icons={"none"}
                      slot={"Privacy policy"}
                    />

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__soGq4
                      )}
                      icons={"none"}
                      slot={"Contact us"}
                    />
                  </p.Stack>
                </div>
              </p.Stack>
            </React.Fragment>
          ),

          value: args.container432,
        })}
      </p.Stack>

      <CopyrightSocialLanguage
        data-plasmic-name={"copyrightSocialLanguage"}
        data-plasmic-override={overrides.copyrightSocialLanguage}
        className={classNames("__wab_instance", sty.copyrightSocialLanguage)}
      />
    </section>
  )
}

const PlasmicDescendants = {
  root: ["root", "container432", "copyrightSocialLanguage"],
  container432: ["container432"],
  copyrightSocialLanguage: ["copyrightSocialLanguage"],
}

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFooter__ArgProps,
      internalVariantPropNames: PlasmicFooter__VariantProps,
    })

    const { dataFetches } = props
    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicFooter"
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`
  }
  return func
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    container432: makeNodeComponent("container432"),
    copyrightSocialLanguage: makeNodeComponent("copyrightSocialLanguage"),
    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps,
  }
)

export default PlasmicFooter
/* prettier-ignore-end */
