// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bL97kH9Dzecu8g2MxMGBSt
// Component: EVeOMo2W8vUv
import * as React from "react"
import * as p from "@plasmicapp/react-web"
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
} from "@plasmicapp/react-web"
import Value from "../../Value" // plasmic-import: cajWlUKm1qYM/component
import "@plasmicapp/react-web/lib/plasmic.css"
import * as defaultcss from "../plasmic__default_style.module.css" // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_ecommerce_starter.module.css" // plasmic-import: bL97kH9Dzecu8g2MxMGBSt/projectcss
import * as sty from "./PlasmicEmojiValueProps.module.css" // plasmic-import: EVeOMo2W8vUv/css
import Icon12Icon from "./icons/PlasmicIcon__Icon12" // plasmic-import: wxzE1-ddiboo/icon
import Icon13Icon from "./icons/PlasmicIcon__Icon13" // plasmic-import: a02F93s9xA79/icon
import Icon14Icon from "./icons/PlasmicIcon__Icon14" // plasmic-import: OubbSdzupajN/icon

export const PlasmicEmojiValueProps__VariantProps = new Array()

export const PlasmicEmojiValueProps__ArgProps = new Array("children")

function PlasmicEmojiValueProps__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props
  return (
    <section
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      {p.renderPlasmicSlot({
        defaultContents: (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox__gBnnz)}
          >
            <Value
              className={classNames("__wab_instance", sty.value__dvS0)}
              slot={
                <Icon12Icon
                  className={classNames(defaultcss.all, sty.svg__eqTy5)}
                  role={"img"}
                />
              }
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text___69Tdf
                )}
              >
                {"Worldwide shipping"}
              </div>

              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text___6IRjo
                )}
              >
                {"Special financing and earn rewards."}
              </div>
            </Value>

            <Value
              className={classNames("__wab_instance", sty.value__hGtSf)}
              slot={
                <Icon13Icon
                  className={classNames(defaultcss.all, sty.svg__uXAjb)}
                  role={"img"}
                />
              }
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__kSqnt
                )}
              >
                {"30-day guarantee"}
              </div>

              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__zzvZh
                )}
              >
                {"Free return policy."}
              </div>
            </Value>

            <Value
              className={classNames("__wab_instance", sty.value__aaeZi)}
              slot={
                <Icon14Icon
                  className={classNames(defaultcss.all, sty.svg__sGpov)}
                  role={"img"}
                />
              }
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__ipUkA
                )}
              >
                {"Secured payments"}
              </div>

              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__hJxkq
                )}
              >
                {"We accept major credit cards."}
              </div>
            </Value>
          </p.Stack>
        ),

        value: args.children,
      })}
    </section>
  )
}

const PlasmicDescendants = {
  root: ["root"],
}

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicEmojiValueProps__ArgProps,
      internalVariantPropNames: PlasmicEmojiValueProps__VariantProps,
    })

    const { dataFetches } = props
    return PlasmicEmojiValueProps__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicEmojiValueProps"
  } else {
    func.displayName = `PlasmicEmojiValueProps.${nodeName}`
  }
  return func
}

export const PlasmicEmojiValueProps = Object.assign(
  // Top-level PlasmicEmojiValueProps renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicEmojiValueProps
    internalVariantProps: PlasmicEmojiValueProps__VariantProps,
    internalArgProps: PlasmicEmojiValueProps__ArgProps,
  }
)

export default PlasmicEmojiValueProps
/* prettier-ignore-end */
